name: "g2g_trans_overfit100_remote"

data:
    src: "de"                       # src language: expected suffix of train files, e.g. "train.de"
    trg: "gloss"                       # trg language
    train: "../dataset/Phoenx2014T_data/phoenix2014T.dev"    # training data
    dev: "../dataset/Phoenx2014T_data/phoenix2014T.dev"      # development data for validation
    random_train_subset: -1         # select this many training examples randomly for training and discard the rest, -1: all
    level: "word"                   # segmentation level: either "word", "bpe" or "char"
    lowercase: False                 # lowercase the data, also for validation
    max_sent_length: 30             # filter out longer sentences from training (src+trg)
    src_voc_min_freq: 1             # src minimum frequency for a token to become part of the vocabulary
    src_voc_limit: 101              # src vocabulary only includes this many most frequent tokens, default: unlimited
    trg_voc_min_freq: 1             # trg minimum frequency for a token to become part of the vocabulary
    trg_voc_limit: 102              # trg vocabulary only includes this many most frequent tokens, default: unlimited
    src_vocab: "../dataset/Phoenx2014T_data/phoenix2014T.vocab.de"   # if specified, load a vocabulary from this file
    trg_vocab: "../dataset/Phoenx2014T_data/phoenix2014T.vocab.gloss"  # one token per line, line number is index


testing:
    beam_size: 5
    alpha: 1.0

training:
    random_seed: 42
    optimizer: "adam"
    normalization: "tokens"
    adam_betas: [0.9, 0.999]
    scheduling: "plateau"
    patience: 5
    decrease_factor: 0.7
    loss: "crossentropy"
    learning_rate: 0.003
    learning_rate_min: 0.00000001
    weight_decay: 0.0
    label_smoothing: 0.1
    batch_size: 128
    batch_type: "sentence"
    early_stopping_metric: "eval_metric"
    epochs: 10000
    validation_freq: 10
    logging_freq: 100
    eval_metric: "bleu"
    model_dir: "models/g2g_transformer_overfit_dev"
    overwrite: True
    shuffle: True
    use_cuda: False
    max_output_length: 100
    print_valid_sents: [0, 1, 2, 3, 4]
    keep_last_ckpts: 5

model:
    initializer: "xavier"
    embed_initializer: "xavier"
    embed_init_gain: 1.0
    init_gain: 1.0
    bias_initializer: "zeros"
    tied_embeddings: False
    tied_softmax: True
    encoder:
        type: "transformer"
        num_layers: 6
        num_heads: 8
        embeddings:
            embedding_dim: 256
            scale: True
            dropout: 0.
        # typically ff_size = 4 x hidden_size
        hidden_size: 256
        ff_size: 1024
        dropout: 0.3
    decoder:
        type: "transformer"
        num_layers: 6
        num_heads: 4
        embeddings:
            embedding_dim: 256
            scale: True
            dropout: 0.
        # typically ff_size = 4 x hidden_size
        hidden_size: 256
        ff_size: 1024
        dropout: 0.3
